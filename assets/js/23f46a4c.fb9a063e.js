"use strict";(self.webpackChunklive_mock_ts=self.webpackChunklive_mock_ts||[]).push([[261],{1434:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>n,metadata:()=>h,toc:()=>o});var c=a(5893),r=a(1151);const n={sidebar_position:2},s=void 0,h={id:"expectation/create-a-matcher",title:"create-a-matcher",description:"How to create matcher",source:"@site/docs/expectation/create-a-matcher.md",sourceDirName:"expectation",slug:"/expectation/create-a-matcher",permalink:"/LiveMockDoc/docs/expectation/create-a-matcher",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/expectation/create-a-matcher.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"create-an-expectation",permalink:"/LiveMockDoc/docs/expectation/create-an-expectation"},next:{title:"create-an-action",permalink:"/LiveMockDoc/docs/expectation/create-an-action"}},i={},o=[{value:"How to create matcher",id:"how-to-create-matcher",level:3},{value:"config the matcher",id:"config-the-matcher",level:3}];function l(e){const t={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.h3,{id:"how-to-create-matcher",children:"How to create matcher"}),"\n",(0,c.jsx)(t.p,{children:"after create the expectation, in the expectation page, click the 'Add Matcher' button in the matchers column."}),"\n",(0,c.jsx)(t.h3,{id:"config-the-matcher",children:"config the matcher"}),"\n",(0,c.jsx)(t.p,{children:"The matcher consists of three parts: match-type, comparator, and match-value. These three parts determine whether a request can be matched. Now livemock supports five match types, which are:"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"method"}),": the method of the request, such as GET, POST, PUT, etc."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"path"}),": the path of the request, the path is start with ",(0,c.jsx)(t.code,{children:"/"}),",like ",(0,c.jsx)(t.code,{children:"/student/123"})]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"header"}),": the headers of the request"]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"query"}),": the parameters in the request URL"]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"param"}),": the parameters in the request body"]}),"\n"]}),"\n",(0,c.jsx)(t.p,{children:"livemock has many matcher comparator, which are:"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"IS"}),": the request value is equal to the match value."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"IS_NOT"}),": the request value is not equal to the match value."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"CONTAINS"}),": the request value contain the match value."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"NOT_CONTAINS"}),": the request value not contain the match value."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"START_WITH"}),": the request value start with the match value."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"END_WITH"}),": the request value end with the match value."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"MATCH_REGEX"}),": the request value match the match value as a regex."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"NOT_MATCH_REGEX"}),": the request value not match the match value as a regex."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"SHOWED"}),": the request value was showed."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"NOT_SHOWED"}),": the request value was not showed."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"MATCH_GLOB"}),": the request value match the match value as a ",(0,c.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Glob_(programming)",children:"glob pattern"}),"."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"NO_MATCH_GLOB"}),": the request value match the match value as a ",(0,c.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Glob_(programming)",children:"glob pattern"}),"."]}),"\n"]}),"\n",(0,c.jsx)(t.p,{children:"Here are some examples of matchers:"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"path START_WITH /book/"}),": matches all request paths that start with ",(0,c.jsx)(t.code,{children:"/book/"}),"."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"query teacher_name CONTAINS tom"}),": matches all requests that have a ",(0,c.jsx)(t.code,{children:"teacher_name"})," query parameter, and the value of the ",(0,c.jsx)(t.code,{children:"teacher_name"}),' query parameter contains "tom".']}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.code,{children:"param teacher_name IS tom"}),": matches all requests that have a body, and the body has a ",(0,c.jsx)(t.code,{children:"teacher_name"})," parameter,value is ",(0,c.jsx)(t.code,{children:"tom"}),". For example, a request with a JSON body like the one below:"]}),"\n"]}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-json",children:'{\r\n  "teacher_name": "tom"\r\n}\n'})})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>h,a:()=>s});var c=a(7294);const r={},n=c.createContext(r);function s(e){const t=c.useContext(n);return c.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function h(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),c.createElement(n.Provider,{value:t},e.children)}}}]);