"use strict";(self.webpackChunklive_mock_ts=self.webpackChunklive_mock_ts||[]).push([[590],{1553:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var o=n(4848),s=n(8453);const i={},a="about request log",r={id:"request-log/request-log",title:"about request log",description:"Livemock will record all requests that match an expectation as a JSON object and display them on the request log page. Below is an example of a recorded object:",source:"@site/docs/request-log/request-log.md",sourceDirName:"request-log",slug:"/request-log/",permalink:"/LiveMockDoc/docs/request-log/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/request-log/request-log.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"create-an-action",permalink:"/LiveMockDoc/docs/expectation/create-an-action"}},l={},c=[{value:"filter",id:"filter",level:2},{value:"preset filter",id:"preset-filter",level:3},{value:"custom filter",id:"custom-filter",level:3},{value:"custom column",id:"custom-column",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"about-request-log",children:"about request log"}),"\n",(0,o.jsx)(t.p,{children:"Livemock will record all requests that match an expectation as a JSON object and display them on the request log page. Below is an example of a recorded object:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-JSON",children:'{\n    "id": 100099,\n    "expectationId": "c26a2cef-8ac7-4ce4-8a4b-595c850488be",\n    "proxyInfo": {\n      "isProxy": false,\n      "proxyHost": null,\n      "proxyPath": null\n    },\n    "req": {\n        "body": { },\n        "headers": {\n            "host": "localhost:8088",\n            "connection": "keep-alive",\n            "cache-control": "max-age=0",\n            "upgrade-insecure-requests": "1",\n            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36",\n            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,/;q=0.8,application/signed-exchange;v=b3;q=0.7",\n            "accept-encoding": "gzip, deflate, br"\n        },\n        "method": "GET",\n        "path": "/olkioi",\n        "requestDate": "2023-08-04T13:14:51.042Z"\n    },\n    "res": {\n        "body": {\n            "name": "John",\n            "age": 30,\n            "hobbies": [\n                "reading",\n                "hiking",\n                "coding"\n            ]\n        },\n        "duration": 0,\n        "headers": {\n            "x-powered-by": "Express",\n            "content-type": "text/plain"\n        },\n        "rawBody": "{\\"name\\":\\"John\\",\\"age\\":30,\\"hobbies\\":[\\"reading\\",\\"hiking\\",\\"coding\\"]}",\n        "responseDate": "2023-08-04T13:14:51.042Z",\n        "status": 200,\n        "statusMessage": "OK"\n    },\n    "meta": {\n        "revision": 1,\n        "created": 1691154891042,\n        "version": 0,\n        "updated": 1691154891042\n    },\n    "$loki": 95\n}\n'})}),"\n",(0,o.jsx)(t.h2,{id:"filter",children:"filter"}),"\n",(0,o.jsx)(t.h3,{id:"preset-filter",children:"preset filter"}),"\n",(0,o.jsx)(t.p,{children:"livemock provide some preset filter to filter the request log.It is very easy to use."}),"\n",(0,o.jsx)(t.h3,{id:"custom-filter",children:"custom filter"}),"\n",(0,o.jsx)(t.p,{children:"livemock also provide some custom filter.It is more functional."}),"\n",(0,o.jsx)(t.h2,{id:"custom-column",children:"custom column"}),"\n",(0,o.jsx)(t.p,{children:'On the request log page, there are predefined columns such as "Method," "Status," "Body," and "Root." You can also add custom columns with three customizable properties: name, path, and display type.'}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Name"}),": The name of the column, which is displayed in the table header."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Path"}),": Defines the value of the path of the request log JSON object to show."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Display type"}),": Defines how to display the value. You can display it as text or a JSON tree."]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"you can also config which column to show,which column to hidden."})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var o=n(6540);const s={},i=o.createContext(s);function a(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);